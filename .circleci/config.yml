version: 2.1

orbs:
  node: circleci/node@2.1.0

executors:
  build-executor:
    docker:
      - image: cimg/node:18.18.2
    resource_class: small

commands:
  setup_environment:
    description: "Export pipeline number as env var"
    parameters:
      version_path:
        type: string
        default: .
    steps:
      - run:
          name: "Export pipeline number"
          command: |
            echo "export PIPELINE_NUM=<< pipeline.number >>" >> $BASH_ENV
            echo "export VERSION=$(cat << parameters.version_path >>/package.json | grep '\"version\":' | sed -e 's/  \"version\": \"//' | sed -e 's/\",//')" >> $BASH_ENV

  add_fingerprint:
    parameters:
      fingerprint:
        type: string
    steps:
      - add_ssh_keys:
          fingerprints: << parameters.fingerprint >>

  git_config:
    parameters:
      email:
        type: string
      author:
        type: string
    steps:
      - run:
          name: git configuration
          command: |
            git config --global user.email << parameters.email >>
            git config --global user.name << parameters.author >>
            ssh-keyscan github.com >> ~/.ssh/known_hosts
  git_tag:
    description: "Tag the project"
    parameters:
      tag:
        type: string
      when:
        type: string
        default: on_success
    steps:
      - run:
          name: Git tag
          command: |
            git tag -f << parameters.tag >>
          when: << parameters.when >>
  git_push_tags:
    description: "Push tags to remote repository"
    steps:
      - run:
          name: git push tags
          command: git push -f --tags

jobs:
  build_test:
    executor: build-executor
    steps:
      - checkout
      - setup_environment
      - node/install-packages
      - run: npm run coverage
      - run: npm run coverage:vitest
      - run:
          name: Inject version constant
          command: sed -ie "s/__VERSION__/${VERSION}/g" src/lib/constants.ts
      - run: npm run compile
      - store_test_results:
          path: ./coverage
      - persist_to_workspace:
          root: .
          paths:
            - .npmrc
            - ./dist
            - ./package-lock.json
            - ./package.json
      # - jobstatus
  publish:
    executor: build-executor
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_environment:
          version_path: /tmp/workspace
      - run:
          name: "publish npm"
          command: cd /tmp/workspace && npm publish
      # - jobstatus

  tag:
    executor: build-executor
    steps:
      - checkout
      - add_fingerprint:
          fingerprint: "81:f0:38:72:86:c7:e4:b2:92:6b:d8:b8:43:fb:24:6a"
      - setup_environment
      - git_config:
          email: circleci@what3words.com
          author: $CIRCLE_USERNAME
      - git_tag:
          tag: v$VERSION
      - git_push_tags

workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build_test
      - publish:
          context: org-global
          requires:
            - build_test
          filters:
            branches:
              only: master
      - tag:
          requires:
            - publish

